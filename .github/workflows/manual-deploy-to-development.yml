name: RELEASE_TO_STAGING

env:
  TZ: "Asia/Tokyo"

on:
  workflow_dispatch:
    inputs:
      tagName:
        description: "タグ名 (e.g. v1.0.0)"
        required: true
      targetRef:
        description: "リリース対象のref (e.g. refs/heads/some-branch)"
        required: true
        default: main

permissions:
  id-token: write
  contents: write
  actions: read

jobs:
  release-to-staging:
    environment: staging
    runs-on: ubuntu-latest
    env:
      TAG_NAME: ${{ github.event.inputs.tagName }}
      TARGET_REF: ${{ github.event.inputs.targetRef }}
    steps:
      - name: Check semver format of target tag
        run: |
          if [[ ! ${{ env.TAG_NAME }} =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Invalid semver format. Please use vX.Y.Z."
            exit 1
          fi

      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ env.TARGET_REF }}

      - name: Check if the tag is newer than the latest tag
        run: |
          git fetch --all --tags
          LATEST_TAG=$(git tag --sort=-creatordate | head -n 1)
          if [ -n "$LATEST_TAG" ] && [ "$(git rev-list -n 1 $LATEST_TAG)" = "$(git rev-list -n 1 ${{ env.TARGET_REF }})" ]; then
            echo "The tag is not newer than the latest tag."
            exit 1
          fi

      - name: Tagging
        run: git tag ${{ env.TAG_NAME }}

      - name: Push tag
        run: git push origin ${{ env.TAG_NAME }}

      - name: Generate Release Notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |

          # リポジトリの最新状態を取得
          git fetch --all --tags

          # 現在のタグの一つ前のタグの取得を試みる
          PREV_TAG=$(git tag --sort=-creatordate | grep -A 1 ${{ env.TAG_NAME }} | tail -n 1)
          echo "Previous tag: $PREV_TAG"
      
          if [ -z "$PREV_TAG" ]; then
            # 前のタグが見つからない場合、最初のコミットからのリリースノートを生成
            NOTES=$(gh api repos/${{ github.repository }}/releases/generate-notes --field tag_name=${{ env.TAG_NAME }} --jq .body)
            echo "No previous tag found. Generating release notes from the first commit."
          else
            # 前のタグが見つかった場合、そのタグからのリリースノートを生成
            NOTES=$(gh api repos/${{ github.repository }}/releases/generate-notes --field tag_name=${{ env.TAG_NAME }} --field previous_tag_name=$PREV_TAG --jq .body)
            echo "Generating release notes from $PREV_TAG to ${{ env.TAG_NAME }}"
          fi
      
          # リリースを作成（タグを明示的に指定）
          gh release create ${{ env.TAG_NAME }} --target ${{ env.TARGET_REF }} --title "${{ env.TAG_NAME }}" --notes "$NOTES"
          echo "Release created."
